{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport axios from \"axios\";\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass P2pool extends utils.Adapter {\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: \"p2pool\",\n        });\n        this.on(\"ready\", this.onReady.bind(this));\n        this.on(\"stateChange\", this.onStateChange.bind(this));\n        // this.on(\"objectChange\", this.onObjectChange.bind(this));\n        // this.on(\"message\", this.onMessage.bind(this));\n        this.on(\"unload\", this.onUnload.bind(this));\n    }\n    /**\n     * create URL\n     * /api/pool_info\n     * /api/miner_info/<id|address>\n     * /api/side_blocks_in_window?window=[window_size]&from=[height][&noMainStatus][&noUncles][&noMiners]\n     * /api/side_blocks_in_window/<id|address>?window=[window_size]&from=[height][&noMainStatus][&noUncles][&noMiners]\n     * /api/payouts/<id|address>?search_limit=[search_limit] 0 for all 10 is default\n     * /api/found_blocks?limit=[limit]&miner=[id|address]\n     * /api/shares?limit=[limit]&miner=[id|address][&onlyBlocks][&noMainStatus][&noUncles][&noMiners]\n     * /api/block_by_id/<blockId>[/full|/light|/raw|/info|/payouts|/coinbase]\n     * /api/block_by_height/<blockHeight>[/full|/light|/raw|/info|/payouts|/coinbase]\n     */\n    private genURL(Command: string, SearchLimit: string): string {\n        let retVal = \"\";\n        if (Command === \"\") {\n            this.log.error(\"Command is empty\");\n            return retVal;\n        } else if (Command === \"miner_info\") {\n            retVal = `https://p2pool.observer/api/${Command}/${this.config.monero_key}`;\n        } else if (Command === \"pool_info\") {\n            retVal = `https://p2pool.observer/api/${Command}`;\n        } else if (Command === \"payouts\") {\n            retVal = `https://p2pool.observer/api/${Command}/${this.config.monero_key}?search_limit=${SearchLimit}`;\n        } else {\n            this.log.error(`Unknown command: ${Command}`);\n        }\n        return retVal;\n    }\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        // Initialize your adapter here\n        let reqUrl = this.genURL(\"pool_info\", \"0\");\n        this.log.debug(reqUrl);\n        axios\n            .get(reqUrl)\n            .then(async (res) => {\n                this.log.debug(JSON.stringify(res.data));\n                let jsonData = null;\n                let validJsonData = false;\n                if (res.data.toString().startsWith(\"{XC_SUC}\")) {\n                    jsonData = JSON.parse(res.data.substring(8));\n                    validJsonData = true;\n                } else if (JSON.stringify(res.data).startsWith('{\"XC_SUC\":[')) {\n                    jsonData = res.data.XC_SUC;\n                    validJsonData = true;\n                } else {\n                    jsonData = [];\n                }\n                if (validJsonData) {\n                    try {\n                    } catch (error) {\n                        if (error instanceof Error) {\n                            this.log.error(error.message);\n                        }\n                        this.log.error(`json format invalid:${JSON.stringify(jsonData)}`);\n                    }\n                } else {\n                    this.log.error(`mediola device rejected the request: ${res.data.toString()}`);\n                }\n            })\n            .catch((error) => {\n                if (error instanceof Error) {\n                    this.log.error(error.message);\n                }\n                this.log.error(\"mediola device not reached by getting sys vars\");\n            });\n        // The adapters config (in the instance object everything under the attribute \"native\") is accessible via\n        // this.config:\n        this.log.info(\"config monero key: \" + this.config.monero_key);\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     */\n    private onUnload(callback: () => void): void {\n        try {\n            // Here you must clear all timeouts or intervals that may still be active\n            // clearTimeout(timeout1);\n            // clearTimeout(timeout2);\n            // ...\n            // clearInterval(interval1);\n\n            callback();\n        } catch (e) {\n            callback();\n        }\n    }\n\n    // If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n    // You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n    // /**\n    //  * Is called if a subscribed object changes\n    //  */\n    // private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n    //     if (obj) {\n    //         // The object was changed\n    //         this.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n    //     } else {\n    //         // The object was deleted\n    //         this.log.info(`object ${id} deleted`);\n    //     }\n    // }\n\n    /**\n     * Is called if a subscribed state changes\n     */\n    private onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n        if (state) {\n            // The state was changed\n            this.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n        } else {\n            // The state was deleted\n            this.log.info(`state ${id} deleted`);\n        }\n    }\n\n    // If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n    // /**\n    //  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n    //  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n    //  */\n    // private onMessage(obj: ioBroker.Message): void {\n    //     if (typeof obj === \"object\" && obj.message) {\n    //         if (obj.command === \"send\") {\n    //             // e.g. send email or pushover or whatever\n    //             this.log.info(\"send command\");\n\n    //             // Send response in callback if required\n    //             if (obj.callback) this.sendTo(obj.from, obj.command, \"Message received\", obj.callback);\n    //         }\n    //     }\n    // }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new P2pool(options);\n} else {\n    // otherwise start the instance directly\n    (() => new P2pool())();\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
